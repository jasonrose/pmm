(ns pmm.ds
  (:require [clojure.java.jdbc :as jdbc]
            [clojure.contrib.java-utils :as java-utils])
  (:import [com.atomikos.jdbc AtomikosDataSourceBean]))

(def pmm-ds (doto (AtomikosDataSourceBean.)
                (.setUniqueResourceName "pmm-ds")
                (.setXaDataSourceClassName "org.hsqldb.jdbc.pool.JDBCXADataSource")
                (.setXaProperties 
                  (java-utils/as-properties {"user" "sa" 
                                             "password" "" 
                                             "url" "jdbc:hsqldb:mem:pmm"}))
                (.setPoolSize 10)))

(def pmm-db {:datasource pmm-ds})

;; create database tables
(defn create-tables []
  (jdbc/with-connection
    pmm-db
    (jdbc/create-table
      :contact
      [:id :bigint "GENERATED BY DEFAULT AS IDENTITY" "PRIMARY KEY"]
      [:firstname "varchar(255)"]
      [:lastname "varchar(255)"]
      [:email "varchar(255)"]
      [:zipcode "varchar(16)"])
    (jdbc/create-table
      :organization
      [:id :bigint "GENERATED BY DEFAULT AS IDENTITY" "PRIMARY KEY"]
      [:name "varchar(255)"])
    (jdbc/create-table
      :division
      [:id :bigint "GENERATED BY DEFAULT AS IDENTITY" "PRIMARY KEY"]
      [:name "varchar(255)"]
      [:number "varchar(255)"]
      [:parent :bigint]
      [:organization :bigint "FOREIGN KEY" "references" :organization "(" :id ")"])))

(create-tables)
